import discord
from discord.ext import commands
import youtube_dl
import datetime
import lazy_queue as lq

settings = {
    'token': input('Please, enter bot-token to start\n(For permanent use \
better to save token in PATH):\n'),
    'bot': 'ü§ò–ü–∞–Ω–∫ü§ò',
    'id': 825365074850873424,
    'prefix': '+'}

FFMPEG_OPTIONS = {
    'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
    'options': '-vn'}

YDL_OPTIONS = {
    'format': 'bestaudio/best',
    'extractaudio': True,
    'noplaylist': True,
    'simulate': 'True',
    'preferredquality': '192',
    'preferredcodec': 'mp3',
    'key': 'FFmpegExtractAudio'}

bot = commands.Bot(command_prefix=settings['prefix'])
bot.remove_command("help")
songs_queue = lq.Queue()
loop_flag = False


@bot.event
async def on_ready():
    print('Status: online')
    await bot.change_presence(activity=discord.Activity(
        type=discord.ActivityType.listening, name='—Å–æ–≤–µ—Ç—ã –ø—å—è–Ω–æ–≥–æ –±–æ–º–∂–∞'))


@bot.command(aliases=['Ping', 'PING', '–ü–∏–Ω–≥', '–ü–ò–ù–ì', '–∑—à—Ç–ø', '–ó–®–¢–ü', '–ó—à—Ç–ø',
                      '–ø–∏–Ω–≥'])
async def ping(ctx):
    await ctx.message.reply(f'–° –ø–æ—Ö–º–µ–ª—å—è: {round(bot.latency*1000)}ms üß†')

#########################[JOIN BLOCK]#########################

@bot.command(aliases=['j', 'J', 'jn', 'JN','Jn', '–æ', '–û', '–æ—Ç', '–û–¢', '–û—Ç',
                      '—Å—é–¥–∞', '–°–Æ–î–ê', '–°—é–¥–∞', '–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Å—å', '–ü–†–ò–°–û–ï–î–ò–ù–ò–°–¨',
                      '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Å—å', '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', '–ü–†–ò–°–û–ï–î–ò–ù–ò–¢–¨–°–Ø',
                      '–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', '–æ—â—à—Ç', '–û—â—à—Ç', '–û–©–®–¢', 'Join', 'JOIN'])
async def join(ctx):
    if ctx.message.author.voice:
        if not ctx.voice_client:
            await ctx.message.author.voice.channel.connect(reconnect=True)
        else:
            await ctx.voice_client.move_to(ctx.message.author.voice.channel)
    else:
        await ctx.message.reply('‚ùó –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ ‚ùó')


@bot.command(aliases=['Disconnect', 'DISCONNECT', 'DC', 'dc', 'Dc', 'Disc',
                      'disc', 'DISC', 'leave', 'Leave', 'LEAVE', '–î–∏—Å–∫–æ–Ω–Ω–µ–∫—Ç',
                      '–î–ò–°–ö–û–ù–ù–ï–ö–¢', '–¥–∏—Å–∫–æ–Ω–Ω–µ–∫—Ç', '–æ—Ç–∫–ª', '–û–¢–ö–õ', '–û—Ç–∫–ª',
                      '–æ—Ç–∫–ª—é—á–∏—Å—å', '–û–¢–ö–õ–Æ–ß–ò–°–¨', '–û—Ç–∫–ª—é—á–∏—Å—å', '–æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è',
                      '–û–¢–ö–õ–Æ–ß–ò–¢–¨–°–Ø', '–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è', '–≤—à—ã—Å—â—Ç—Ç—É—Å–µ', '–í—à—ã—Å—â—Ç—Ç—É—Å–µ',
                      '–í–®–´–°–©–¢–¢–£–°–ï', '–í–°', '–≤—Å', '–í—Å', '–í—à—ã—Å', '–≤—à—ã—Å', '–í–®–´–°',
                      '–¥—É—Ñ–º—É', '–î—É—Ñ–º—É', '–î–£–§–ú–£', '–í—ã–π–¥–∏', '–í–´–ô–î–ò', '–≤—ã–π–¥–∏',
                      '–∫—ã—à', '–ö–´–®', '–ö—ã—à', '—É–π–¥–∏', '–£–π–¥–∏', '–£–ô–î–ò', 'd', '–≤'])
async def disconnect(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        await ctx.message.reply(f'üç∫ –£—à—ë–ª –≤ –∑–∞–ø–æ–π –≤–º–µ—Å—Ç–µ —Å \
{ctx.message.author.mention} üç∫')
    else:
        await ctx.message.reply('–í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å —Ä–∞–∑–±—É–¥–∏—Ç—å –±–æ—Ç–∞,\
 –Ω–æ –æ–Ω –≤ –æ—Ç–∫–ª—é—á–∫–µ üí§')

#########################[PLAY MUSIC BLOCK]#########################

@bot.command()
async def add(ctx, *url):
    url = ' '.join(url)
    with youtube_dl.YoutubeDL(YDL_OPTIONS) as ydl:
        try:
            info = ydl.extract_info(url, download=False)
        except:
            info = ydl.extract_info(f"ytsearch:{url}",
                                    download=False)['entries'][0]

    URL = info['formats'][0]['url']
    name = info['title']
    time = str(datetime.timedelta(seconds=info['duration']))
    songs_queue.q_add([name, time, URL])
    embed = discord.Embed(description=f'–ó–∞–ø–∏—Å—ã–≤–∞—é [{name}]({url}) –≤ –æ—á–µ—Ä–µ–¥—å üìù',
                          colour=discord.Colour.red())
    await ctx.message.reply(embed=embed)


def step_and_remove(voice_client):
    if loop_flag:
        songs_queue.q_add(songs_queue.get_value()[0])
    songs_queue.q_remove()
    audio_player_task(voice_client)


def audio_player_task(voice_client):
    if not voice_client.is_playing() and songs_queue.get_value():
        voice_client.play(discord.FFmpegPCMAudio(
                                  executable="ffmpeg\\bin\\ffmpeg.exe",
                                  source=songs_queue.get_value()[0][2],
                                  **FFMPEG_OPTIONS),
                                  after=lambda e: step_and_remove(voice_client))


@bot.command(aliases=['Play', 'PLAY', '–∏–≥—Ä–∞–π', '–ò–ì–†–ê–ô', '–ò–≥—Ä–∞–π', '—Å—ã–≥—Ä–∞–π',
                      '–°—ã–≥—Ä–∞–π', '–°–´–ì–†–ê–ô', '–∑–¥—Ñ–Ω', '–ó–¥—Ñ–Ω', '–ó–î–§–ù', 'p', 'P',
                      'pl', 'PL', 'Pl', '–∑', '–ó', '–∑–¥', '–ó–î', '–ó–¥', '–ü–ª–µ–π',
                      '–ü–õ–ï–ô', '–ø–ª–µ–π'])
async def play(ctx, *url):
    await join(ctx)
    await add(ctx, ' '.join(url))
    await ctx.message.add_reaction(emoji='üé∏')
    voice_client = ctx.guild.voice_client
    audio_player_task(voice_client)


@bot.command()
async def loop(ctx):
    global loop_flag
    loop_flag = True
    await ctx.message.reply('–ó–∞–ª—É–ø–ª–µ–Ω–æ')


@bot.command()
async def unloop(ctx):
    global loop_flag
    loop_flag = False
    await ctx.message.reply('–û—Ç–ª—É–ø–ª–µ–Ω–æ')


@bot.command(aliases=['Queue', 'QUEUE', '–π–≥—É–≥—É', '–ô–≥—É–≥—É', '–ô–ì–£–ì–£', '–æ—á–µ—Ä–µ–¥—å',
                      '–û—á–µ—Ä–µ–¥—å', '–û–ß–ï–†–ï–î–¨', '—Å–ø–∏—Å–æ–∫', '–°–ø–∏—Å–æ–∫', '–°–ü–ò–°–û–ö',
                      'list', 'List', 'LIST', '–¥—à—ã–µ', '–î—à—ã–µ', '–î–®–´–ï', '–õ–∏—Å—Ç',
                      '–ª–∏—Å—Ç', '–õ–ò–°–¢', '–ø–µ—Å–Ω–∏', '–ü–µ—Å–Ω–∏', '–ü–ï–°–ù–ò', 'songs',
                      'Songs', 'SONGS', '—ã—â—Ç–ø—ã', '–´–©–¢–ü–´', '–´—â—Ç–ø—ã', 'q'])
async def queue(ctx):
    if len(songs_queue.get_value()) > 0:
        only_names_and_time_queue = []
        for i in songs_queue.get_value():
            name = i[0]
            if len(i[0]) > 30:
                name = i[0][:30] + '...'
            only_names_and_time_queue.append(f'üìÄ `{name:<33}   {i[1]:>20}`\n')
        c = 0
        queue_of_queues = []
        while c < len(only_names_and_time_queue):
            queue_of_queues.append(only_names_and_time_queue[c:c + 10])
            c += 10

        embed = discord.Embed(title=f'–û–ß–ï–†–ï–î–¨ [LOOP: {loop_flag}]',
                              description=''.join(queue_of_queues[0]),
                              colour=discord.Colour.red())
        await ctx.send(embed=embed)

        for i in range(1, len(queue_of_queues)):
            embed = discord.Embed(description=''.join(queue_of_queues[i]),
                                  colour=discord.Colour.red())
            await ctx.send(embed=embed)
    else:
        await ctx.send('–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞ üìÑ')


@bot.command(aliases=['ps', 'wait', 'wt', 'stop', '—Å—Ç–æ–ø', '–ø–∞—É–∑–∞'])
async def pause(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice:
        voice.pause()
        await ctx.message.reply('–®–æ —Ç—ã —Å–¥–µ–ª–∞–ª? –ü–æ—Ä–≤–∞–ª —Å—Ç—Ä—É–Ω—É. –ë–µ–∑ –Ω–µ—ë –∏–≥—Ä–∞–π!')


@bot.command(aliases=['rs', 'continue', 'cnt', 'ct', '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å'])
async def resume(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice:
        if voice.is_paused():
            voice.resume()
            await ctx.message.reply('–ü–æ–º–µ–Ω—è–ª —Å—Ç—Ä—É–Ω—É.')


@bot.command(aliases=['sk', 'next', '—Å–ª–µ–¥—É—é—â–∞—è', '—Å–∫–∏–ø', '—Å–∫–∏–ø–Ω—É—Ç—å'])
async def skip(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice:
        voice.stop()


@bot.command(aliases=['cl', '–æ—á–∏—Å—Ç–∏—Ç—å', 'c'])
async def clear(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice:
            voice.stop()
            while not songs_queue.is_empty():
                songs_queue.q_remove()


@bot.command(aliases=['rem', 'r', '—É–¥–∞–ª–∏—Ç—å'])
async def remove(ctx, index):
    try:
        if len(songs_queue.get_value()) > 0:
            index = int(index) - 1
            if index >= 0:
                d = songs_queue.q_rem_by_index(index)[0]
                await ctx.message.reply(f'–í—ã—á–µ—Ä–∫–Ω—É–ª –∏–∑ —Å–ø–∏—Å–∫–∞: {d}')
        else:
            await ctx.message.reply('–ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å')
    except:
        await ctx.message.reply(f'–ü–µ—Å–Ω–∏ —Å —Ç–∞–∫–∏–º –∏–Ω–¥–µ–∫—Å–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')

bot.run(settings['token'])
